No-1 :

	The four main access modifiers in java is public,private,default,protected.
	*Public: In a public modifier, We can access the public modifier from anywhere. We can access public modifiers from within the class as well as from outside the class and also within the package and outside the package.
	*Private: In a private modifier, We can access the private modifier only within the same class and not from outside the class.
	*Default: In a default modifier, We can access the default modifier only within the same package and not from outside the package. Also, if we do not specify any access modifier it will automatically consider it as default.
	*Protected: In a Protected modifier, We can access the protected modifier within the same package and also from outside the package with the help of the child class. If we do not make the child class, we cannot access it from outside the package. So inheritance is a must for accessing it from outside the package.


Access Modifier	Within Class	Within Package	Same Package by subclasses	Outside Package by subclasses	Global
Public  	Yes		   Yes		    Yes					Yes			 Yes
Protected	Yes		   Yes		    Yes					Yes			 No
Default	        Yes		   Yes		    Yes					No			 No
Private 	Yes		   No		    No					No			 No


----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
No-2 :

Errors:

*The error indicates trouble that primarily occurs due to the scarcity of system resources.
*It is not possible to recover from an error. 
*In java, all the errors are unchecked.
*The system in which the program is running is responsible for errors.
*They are described in the java.lang.Error package.

Exception:

*The exceptions are the issues that can appear at runtime and compile time.
*It is possible to recover from an exception.
*In java, the exceptions can be both checked and unchecked.
*The code of the program is accountable for exceptions.
*They are described in java.lang.Exception package.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
No-3 :

Checked Exemption:
*Checked exceptions occur at compile time.
*The compiler checks a checked exception.
*These types of exceptions can be handled at the time of compilation.
*They are the sub-class of the exception class.
*Here, the JVM needs the exception to catch and handle.
*Examples of Checked exceptions:
--->File Not Found Exception
--->No Such Field Exception.

Unchecked Exemption:
*Unchecked exceptions occur at runtime.
*The compiler does not check these types of exceptions.
*These types of exceptions cannot be a catch or handle at the time of compilation, because they get generated by the mistakes in the program.
*They are runtime exceptions and hence are not a part of the Exception class.
*Here, the JVM does not require the exception to catch and handle.
*Examples of Unchecked Exceptions:
--->No Such Element Exception
--->Array Index Out of Bounds Exception
--->Undeclared Throwable Exception.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
No-4 :

package org.Exception.com;

import java.util.Scanner;

public class ExceptionHandling {
	public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the no A");
        int A = sc.nextInt();
        System.out.println("Enter the no B");
        int B = sc.nextInt();
    
        try {
         int Ans = A / B;
         System.out.println("Result: " + Ans);
        } 
        catch (ArithmeticException ex) {
         System.out.println("Error: " + ex.getMessage());
         System.out.println("Cannot divide a value by zero.");
        }
   }
}


Input =

	A= 4
	B= 0

Result:

Enter the no A
4
Enter the no B
0
Error: / by zero
Cannot divide a value by zero.

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
No-5 :

Array index out of bound exemption:

package org.arrays.com;

import java.util.Arrays;
import java.util.Scanner;
public class Main {
	   public static void main(String args[]) {
	      int[] myArray = {8, 56, 78, 90, 12, 23, 75};
	      System.out.println("Elements in the array are:: ");
	      System.out.println(Arrays.toString(myArray));
	      Scanner sc = new Scanner(System.in);
	      System.out.println("Enter the index of the required element ::");
	      try {
	         int element = sc.nextInt();
	         System.out.println("Element in the given index is :: "+myArray[element]);
	      } catch(ArrayIndexOutOfBoundsException e) {
	         System.out.println("The Index Out Of Bounds Exception");
	         System.out.println("Please enter an index number between 0 and 6");
	      }
	   }
	}

Output =

Elements in the array are:: 
[8, 56, 78, 90, 12, 23, 75]
Enter the index of the required element ::
8
The Index Out Of Bounds Exception
Please enter an index number between 0 and 6


String index out of bound exemption:

package org.arrays.com;

import java.util.Scanner;
public class Main {
	public static void main(String[] args) {
	      String str = "Welcome to Guvi";
	      try {
	        // StringIndexOutOfBoundsException will be thrown because str only has a length of 27.
	str.charAt(28);
	         System.out.println("String Index is valid");
	      } catch (StringIndexOutOfBoundsException e) {
	         System.out.println("String Index is out of bounds");
	      }
	   }
	}


Output = 
	String Index is out of bounds.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
No-6 :

package org.login.com;

import java.util.Scanner;

public class LoginSystem {
	        public static void main(String[] args) {
            Scanner Name = new Scanner(System.in);
            Scanner Password = new Scanner(System.in);
            String username;
            String password;

        try {
            System.out.print("Enter your username: ");
            username = Name.nextLine();
            System.out.print("Enter your password: ");
            password = Password.nextLine();
        }
        catch (IllegalArgumentException e) {
            System.out.println(e);
        }
        System.out.println("Successfully signed up.");
    

       
    }

}

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
No-7 :

package org.AgeException.com;

import java.util.Scanner;

public class AgeException {
	public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the Age");
        int Age = sc.nextInt();
           
        try {
        	if(Age < 18) 
        	throw new Exception("Invalid age Exception");
        	else
        	System.out.println("Age is= "+ Age); 
             
        }
         catch (Exception ex) {
         System.out.println("Error: " + ex.getMessage());
         System.out.println("Age is Less than 18.");
        }
   }
	}


Input = 
	Age=15

Output = 

Enter the Age
15
Error: Invalid age Exception
Age is Less than 18.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
No-8 :

package org.FilenotFoundException;

import java.util.Scanner;
import java.io.File;
import java.util.Scanner;

public class FileNotFoundException {

    public static void main(String[] args) throws java.io.FileNotFoundException {
        File file = new File("C:/java class/class notes/Day-2.txt");
        Scanner sc = new Scanner(file); 

        String title = sc.nextLine();
        System.out.println(title);
       
    }
}

Output = 

Exception in thread "main" java.io.FileNotFoundException:
 C:\java class\class notes\Day-2.txt (The system cannot find the path specified)
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------